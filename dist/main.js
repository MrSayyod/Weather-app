(()=>{"use strict";const t=(t,e={},n="")=>{const i=document.createElement(t);return Object.keys(e).forEach((t=>{i.setAttribute(t,e[t])})),i.textContent=n,i},e=(t=[])=>{for(let e=t.length-2;e>=0;e-=1)t[e].appendChild(t[e+1])};window.nodeCreator=t(),window.chainAppend=e();const n=document.getElementById("search"),i=document.getElementById("submit");document.getElementById("toggler"),i.addEventListener("click",(i=>{i.preventDefault(),function(){const i=document.querySelector("body"),d=document.getElementById("display"),o=t("div",{id:"city"}),r=t("div",{id:"weather"}),a=t("div",{id:"weather_type"}),c=t("span",{id:"for_text"}),l=t("div",{id:"error"}),s=n.value;let h=null;fetch(`http://api.openweathermap.org/data/2.5/weather?q=${s}&appid=1ebf85132fae8866f42ade66510b07df`,{mode:"cors"}).then((t=>t.json())).then((n=>{if(d.firstChild)for(;d.firstChild;)d.removeChild(d.firstChild);o.textContent=n.name,h=(n.main.temp-273.15).toFixed(1),r.textContent=`${h}° C`,c.textContent=n.weather[0].main,e([d,o]),e([d,r]),e([d,a,c]),function(n){const i=t("button",{id:"toggler",class:"btn btn-primary"},"℃ / ℉");e([n,i])}(d)})).catch((()=>{if(d.firstChild)for(;d.firstChild;)d.removeChild(d.firstChild);l.textContent="City not found",e([i,d,l])}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9ub2RlQ3JlYXRvci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJub2RlQ3JlYXRvciIsImh0bWxUYWciLCJvcHRpb25zIiwidGV4dCIsIm5vZGUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwiY2hhaW5BcHBlbmQiLCJub2RlcyIsImkiLCJsZW5ndGgiLCJhcHBlbmRDaGlsZCIsIndpbmRvdyIsInNlYXJjaCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImJvZHkiLCJxdWVyeVNlbGVjdG9yIiwiZGlzcGxheSIsImNpdHkiLCJpZCIsIndlYXRoZXIiLCJ3ZWF0aGVyVHlwZSIsIndlYXRoZXJUeXBlVGV4dCIsImVyciIsImNpdHlOYW1lIiwidmFsdWUiLCJkZWdyZWUiLCJmZXRjaCIsIm1vZGUiLCJ0aGVuIiwicmVzcG9uc2UiLCJqc29uIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwibmFtZSIsIm1haW4iLCJ0ZW1wIiwidG9GaXhlZCIsInRvZ2dsZXIiLCJjbGFzcyIsImRpc3BsYXlUb2dnbGVyIiwiY2F0Y2giLCJnZXRSZXN1bHQiXSwibWFwcGluZ3MiOiJtQkFBQSxNQUFNQSxFQUFjLENBQUNDLEVBQVNDLEVBQVUsR0FBSUMsRUFBTyxNQUNqRCxNQUFNQyxFQUFPQyxTQUFTQyxjQUFjTCxHQU1wQyxPQUxhTSxPQUFPQyxLQUFLTixHQUNwQk8sU0FBU0MsSUFDWk4sRUFBS08sYUFBYUQsRUFBS1IsRUFBUVEsT0FFakNOLEVBQUtRLFlBQWNULEVBQ1pDLEdBR0hTLEVBQWMsQ0FBQ0MsRUFBUSxNQUMzQixJQUFLLElBQUlDLEVBQUlELEVBQU1FLE9BQVMsRUFBR0QsR0FBSyxFQUFHQSxHQUFLLEVBQzFDRCxFQUFNQyxHQUFHRSxZQUFZSCxFQUFNQyxFQUFJLEtBSW5DRyxPQUFPbEIsWUFBY0EsSUFDckJrQixPQUFPTCxZQUFjQSxJQ2ZyQixNQUNNTSxFQUFTZCxTQUFTZSxlQUFlLFVBQ2pDLEVBQVNmLFNBQVNlLGVBQWUsVUFDdkJmLFNBQVNlLGVBQWUsV0FnRHhDLEVBQU9DLGlCQUFpQixTQUFVQyxJQUNoQ0EsRUFBRUMsaUJBMUNKLFdBQ0UsTUFBTUMsRUFBT25CLFNBQVNvQixjQUFjLFFBQzlCQyxFQUFVckIsU0FBU2UsZUFBZSxXQUNsQ08sRUFBTzNCLEVBQVksTUFBTyxDQUFFNEIsR0FBSSxTQUNoQ0MsRUFBVTdCLEVBQVksTUFBTyxDQUFFNEIsR0FBSSxZQUNuQ0UsRUFBYzlCLEVBQVksTUFBTyxDQUFFNEIsR0FBSSxpQkFDdkNHLEVBQWtCL0IsRUFBWSxPQUFRLENBQUU0QixHQUFJLGFBQzVDSSxFQUFNaEMsRUFBWSxNQUFPLENBQUU0QixHQUFJLFVBQy9CSyxFQUFXZCxFQUFPZSxNQUN4QixJQUFJQyxFQUFTLEtBQ2JDLE1BQU0sb0RBQW9ESCwyQ0FDeEQsQ0FBRUksS0FBTSxTQUNQQyxNQUFNQyxHQUFhQSxFQUFTQyxTQUM1QkYsTUFBTUMsSUFDTCxHQUFJYixFQUFRZSxXQUNWLEtBQU9mLEVBQVFlLFlBQ2JmLEVBQVFnQixZQUFZaEIsRUFBUWUsWUFJaENkLEVBQUtmLFlBQWMyQixFQUFTSSxLQUM1QlIsR0FBVUksRUFBU0ssS0FBS0MsS0FBTyxRQUFRQyxRQUFRLEdBQy9DakIsRUFBUWpCLFlBQWMsR0FBR3VCLE9BQ3pCSixFQUFnQm5CLFlBQWMyQixFQUFTVixRQUFRLEdBQUdlLEtBQ2xEL0IsRUFBWSxDQUFDYSxFQUFTQyxJQUN0QmQsRUFBWSxDQUFDYSxFQUFTRyxJQUN0QmhCLEVBQVksQ0FBQ2EsRUFBU0ksRUFBYUMsSUEvQnpDLFNBQXdCTCxHQUN0QixNQUFNcUIsRUFBVS9DLEVBQVksU0FBVSxDQUFDNEIsR0FBSSxVQUFXb0IsTUFBTyxtQkFBb0IsU0FDakZuQyxFQUFZLENBQUNhLEVBQVNxQixJQThCbEJFLENBQWV2QixNQUVoQndCLE9BQU0sS0FDTCxHQUFJeEIsRUFBUWUsV0FDVixLQUFPZixFQUFRZSxZQUNiZixFQUFRZ0IsWUFBWWhCLEVBQVFlLFlBR2hDVCxFQUFJcEIsWUFBYyxpQkFDbEJDLEVBQVksQ0FBQ1csRUFBTUUsRUFBU00sT0FPaENtQixPIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBub2RlQ3JlYXRvciA9IChodG1sVGFnLCBvcHRpb25zID0ge30sIHRleHQgPSAnJykgPT4ge1xuICBjb25zdCBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChodG1sVGFnKTtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICBrZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgIG5vZGUuc2V0QXR0cmlidXRlKGtleSwgb3B0aW9uc1trZXldKTtcbiAgfSk7XG4gIG5vZGUudGV4dENvbnRlbnQgPSB0ZXh0O1xuICByZXR1cm4gbm9kZTtcbn07XG5cbmNvbnN0IGNoYWluQXBwZW5kID0gKG5vZGVzID0gW10pID0+IHtcbiAgZm9yIChsZXQgaSA9IG5vZGVzLmxlbmd0aCAtIDI7IGkgPj0gMDsgaSAtPSAxKSB7XG4gICAgbm9kZXNbaV0uYXBwZW5kQ2hpbGQobm9kZXNbaSArIDFdKTtcbiAgfVxufTtcblxud2luZG93Lm5vZGVDcmVhdG9yID0gbm9kZUNyZWF0b3IoKTtcbndpbmRvdy5jaGFpbkFwcGVuZCA9IGNoYWluQXBwZW5kKCk7XG5cbmV4cG9ydCB7IG5vZGVDcmVhdG9yLCBjaGFpbkFwcGVuZCB9OyIsImltcG9ydCB7IG5vZGVDcmVhdG9yLCBjaGFpbkFwcGVuZCB9IGZyb20gJy4vbm9kZUNyZWF0b3InO1xuXG5jb25zdCBhcGlLZXkgPSAnMWViZjg1MTMyZmFlODg2NmY0MmFkZTY2NTEwYjA3ZGYnO1xuY29uc3Qgc2VhcmNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaCcpO1xuY29uc3Qgc3VibWl0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdCcpO1xuY29uc3QgdG9nZ2xlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2dnbGVyJylcblxuZnVuY3Rpb24gZGlzcGxheVRvZ2dsZXIoZGlzcGxheSkge1xuICBjb25zdCB0b2dnbGVyID0gbm9kZUNyZWF0b3IoJ2J1dHRvbicsIHtpZDogXCJ0b2dnbGVyXCIsIGNsYXNzOiBcImJ0biBidG4tcHJpbWFyeVwifSwgXCLihIMgLyDihIlcIilcbiAgY2hhaW5BcHBlbmQoW2Rpc3BsYXksIHRvZ2dsZXJdKVxufVxuXG5mdW5jdGlvbiBnZXRSZXN1bHQoKSB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG4gIGNvbnN0IGRpc3BsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGlzcGxheScpO1xuICBjb25zdCBjaXR5ID0gbm9kZUNyZWF0b3IoJ2RpdicsIHsgaWQ6ICdjaXR5JyB9KTtcbiAgY29uc3Qgd2VhdGhlciA9IG5vZGVDcmVhdG9yKCdkaXYnLCB7IGlkOiAnd2VhdGhlcicgfSk7XG4gIGNvbnN0IHdlYXRoZXJUeXBlID0gbm9kZUNyZWF0b3IoJ2RpdicsIHsgaWQ6ICd3ZWF0aGVyX3R5cGUnIH0pO1xuICBjb25zdCB3ZWF0aGVyVHlwZVRleHQgPSBub2RlQ3JlYXRvcignc3BhbicsIHsgaWQ6ICdmb3JfdGV4dCcgfSk7XG4gIGNvbnN0IGVyciA9IG5vZGVDcmVhdG9yKCdkaXYnLCB7IGlkOiAnZXJyb3InIH0pO1xuICBjb25zdCBjaXR5TmFtZSA9IHNlYXJjaC52YWx1ZTtcbiAgbGV0IGRlZ3JlZSA9IG51bGw7XG4gIGZldGNoKGBodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtjaXR5TmFtZX0mYXBwaWQ9JHthcGlLZXl9YCxcbiAgICB7IG1vZGU6ICdjb3JzJyB9KVxuICAgIC50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgaWYgKGRpc3BsYXkuZmlyc3RDaGlsZCkge1xuICAgICAgICB3aGlsZSAoZGlzcGxheS5maXJzdENoaWxkKSB7XG4gICAgICAgICAgZGlzcGxheS5yZW1vdmVDaGlsZChkaXNwbGF5LmZpcnN0Q2hpbGQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgXG4gICAgICBjaXR5LnRleHRDb250ZW50ID0gcmVzcG9uc2UubmFtZTtcbiAgICAgIGRlZ3JlZSA9IChyZXNwb25zZS5tYWluLnRlbXAgLSAyNzMuMTUpLnRvRml4ZWQoMSk7XG4gICAgICB3ZWF0aGVyLnRleHRDb250ZW50ID0gYCR7ZGVncmVlfcKwIENgO1xuICAgICAgd2VhdGhlclR5cGVUZXh0LnRleHRDb250ZW50ID0gcmVzcG9uc2Uud2VhdGhlclswXS5tYWluO1xuICAgICAgY2hhaW5BcHBlbmQoW2Rpc3BsYXksIGNpdHldKTtcbiAgICAgIGNoYWluQXBwZW5kKFtkaXNwbGF5LCB3ZWF0aGVyXSk7XG4gICAgICBjaGFpbkFwcGVuZChbZGlzcGxheSwgd2VhdGhlclR5cGUsIHdlYXRoZXJUeXBlVGV4dF0pO1xuICAgICAgZGlzcGxheVRvZ2dsZXIoZGlzcGxheSlcbiAgICB9KVxuICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICBpZiAoZGlzcGxheS5maXJzdENoaWxkKSB7XG4gICAgICAgIHdoaWxlIChkaXNwbGF5LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICBkaXNwbGF5LnJlbW92ZUNoaWxkKGRpc3BsYXkuZmlyc3RDaGlsZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGVyci50ZXh0Q29udGVudCA9ICdDaXR5IG5vdCBmb3VuZCc7XG4gICAgICBjaGFpbkFwcGVuZChbYm9keSwgZGlzcGxheSwgZXJyXSk7XG4gICAgfSk7XG59XG5cblxuc3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBnZXRSZXN1bHQoKTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==