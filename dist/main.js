(()=>{"use strict";window.nodeCreator=((e,t={},n="")=>{const o=document.createElement(e);return Object.keys(t).forEach((e=>{o.setAttribute(e,t[e])})),o.textContent=n,o})(),window.chainAppend=((e=[])=>{for(let t=e.length-2;t>=0;t--)e[t].appendChild(e[t+1])})();const e=document.getElementById("search"),t=document.getElementById("submit");document.getElementById("display"),t.addEventListener("click",(t=>{t.preventDefault(),function(){const t=document.getElementById("city"),n=document.getElementById("weather"),o=document.getElementById("for_text"),c=(document.getElementById("for_img"),e.value);fetch(`http://api.openweathermap.org/data/2.5/weather?q=${c}&appid=1ebf85132fae8866f42ade66510b07df`,{mode:"cors"}).then((function(e){return e.json()})).then((function(e){let c=e.name,d=e.main.temp;t.textContent=e.name,n.textContent=e.main.temp-273.15+"Â° C",o.textContent=e.weather[0].main,console.log(`City: ${c} \n Temperate: ${d} in Kalvin`);let a=JSON.stringify(e);return console.log(a),console.log(e),a})).catch((function(e){console.log(e),console.log("City not found")}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XZWF0aGVyLWFwcC8uL3NyYy9ub2RlQ3JlYXRvci5qcyIsIndlYnBhY2s6Ly9XZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJub2RlQ3JlYXRvciIsImh0bWxUYWciLCJvcHRpb25zIiwidGV4dCIsIm5vZGUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwiY2hhaW5BcHBlbmQiLCJub2RlcyIsImkiLCJsZW5ndGgiLCJhcHBlbmRDaGlsZCIsInNlYXJjaCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImNpdHkiLCJ3ZWF0aGVyIiwid2VhdGhlclR5cGVUZXh0IiwiY2l0eU5hbWUiLCJ2YWx1ZSIsImZldGNoIiwibW9kZSIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJyZXN1bHQiLCJuYW1lIiwibWFpbiIsInRlbXAiLCJjb25zb2xlIiwibG9nIiwianNvblJlc3VsdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXRjaCIsImVycm9yIiwiZ2V0UmVzdWx0Il0sIm1hcHBpbmdzIjoibUJBaUJBQSxPQUFPQyxZQWpCYSxFQUFDQyxFQUFTQyxFQUFVLEdBQUlDLEVBQU8sTUFDakQsTUFBTUMsRUFBT0MsU0FBU0MsY0FBY0wsR0FNcEMsT0FMYU0sT0FBT0MsS0FBS04sR0FDcEJPLFNBQVNDLElBQ1pOLEVBQUtPLGFBQWFELEVBQUtSLEVBQVFRLE9BRWpDTixFQUFLUSxZQUFjVCxFQUNaQyxHQVVZSixHQUNyQkQsT0FBT2MsWUFSYSxFQUFDQyxFQUFRLE1BQzNCLElBQUssSUFBSUMsRUFBSUQsRUFBTUUsT0FBUyxFQUFHRCxHQUFLLEVBQUdBLElBQ3JDRCxFQUFNQyxHQUFHRSxZQUFZSCxFQUFNQyxFQUFFLEtBTVpGLEdDZnJCLE1BQ01LLEVBQVNiLFNBQVNjLGVBQWUsVUFDakMsRUFBU2QsU0FBU2MsZUFBZSxVQUN2QmQsU0FBU2MsZUFBZSxXQXNDeEMsRUFBT0MsaUJBQWlCLFNBQVVDLElBQ2hDQSxFQUFFQyxpQkFyQ0YsV0FDQSxNQUFNQyxFQUFPbEIsU0FBU2MsZUFBZSxRQUMvQkssRUFBVW5CLFNBQVNjLGVBQWUsV0FDbENNLEVBQWtCcEIsU0FBU2MsZUFBZSxZQUUxQ08sR0FEbUJyQixTQUFTYyxlQUFlLFdBQ2hDRCxFQUFPUyxPQUN4QkMsTUFBTSxvREFBb0RGLDJDQUMxRCxDQUFFRyxLQUFNLFNBQ1BDLE1BQUssU0FBU0MsR0FDYixPQUFPQSxFQUFTQyxVQUVqQkYsTUFBSyxTQUFTQyxHQUViLElBQUlFLEVBQ01GLEVBQVNHLEtBRGZELEVBRWNGLEVBQVNJLEtBQUtDLEtBR2hDYixFQUFLWCxZQUFjbUIsRUFBU0csS0FDNUJWLEVBQVFaLFlBQWNtQixFQUFTSSxLQUFLQyxLQUFPLE9BQVMsTUFDcERYLEVBQWdCYixZQUFjbUIsRUFBU1AsUUFBUSxHQUFHVyxLQUdsREUsUUFBUUMsSUFBSSxTQUFTTCxtQkFBNkJBLGVBQ2xELElBQUlNLEVBQWNDLEtBQUtDLFVBQVVWLEdBSWpDLE9BSEFNLFFBQVFDLElBQUlDLEdBQ1pGLFFBQVFDLElBQUlQLEdBRUxRLEtBRVJHLE9BQU0sU0FBU0MsR0FDZE4sUUFBUUMsSUFBSUssR0FDWk4sUUFBUUMsSUFBSSxxQkFNZE0sTyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZUNyZWF0b3IgPSAoaHRtbFRhZywgb3B0aW9ucyA9IHt9LCB0ZXh0ID0gXCJcIikgPT4ge1xuICBjb25zdCBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChodG1sVGFnKVxuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob3B0aW9ucylcbiAga2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICBub2RlLnNldEF0dHJpYnV0ZShrZXksIG9wdGlvbnNba2V5XSlcbiAgfSlcbiAgbm9kZS50ZXh0Q29udGVudCA9IHRleHRcbiAgcmV0dXJuIG5vZGVcbn1cblxuY29uc3QgY2hhaW5BcHBlbmQgPSAobm9kZXMgPSBbXSkgPT4ge1xuICBmb3IgKGxldCBpID0gbm9kZXMubGVuZ3RoIC0gMjsgaSA+PSAwOyBpLS0pIHtcbiAgICBub2Rlc1tpXS5hcHBlbmRDaGlsZChub2Rlc1tpKzFdKTtcbiAgICBcbiAgfVxufVxuXG53aW5kb3cubm9kZUNyZWF0b3IgPSBub2RlQ3JlYXRvcigpXG53aW5kb3cuY2hhaW5BcHBlbmQgPSBjaGFpbkFwcGVuZCgpXG5cbmV4cG9ydCB7IG5vZGVDcmVhdG9yLCBjaGFpbkFwcGVuZCB9IiwiLy8gaW1wb3J0IGdldFJlc3VsdCBmcm9tICcuL3dvcmtpbmdXaXRoQVBJJztcbmltcG9ydCB7IG5vZGVDcmVhdG9yLCBjaGFpbkFwcGVuZCB9IGZyb20gJy4vbm9kZUNyZWF0b3InXG5cbmNvbnN0ICBhcGlLZXkgPSBcIjFlYmY4NTEzMmZhZTg4NjZmNDJhZGU2NjUxMGIwN2RmXCJcbmNvbnN0IHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2gnKVxuY29uc3Qgc3VibWl0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdWJtaXRcIilcbmNvbnN0IGRpc3BsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGlzcGxheScpXG4gIFxuICBmdW5jdGlvbiBnZXRSZXN1bHQoKSB7XG4gIGNvbnN0IGNpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2l0eScpXG4gIGNvbnN0IHdlYXRoZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2VhdGhlcicpXG4gIGNvbnN0IHdlYXRoZXJUeXBlVGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmb3JfdGV4dCcpXG4gIGNvbnN0IHdlYXRoZXJUeXBlSW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZm9yX2ltZycpXG4gIGNvbnN0IGNpdHlOYW1lID0gc2VhcmNoLnZhbHVlXG4gIGZldGNoKGBodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtjaXR5TmFtZX0mYXBwaWQ9JHthcGlLZXl9YCxcbiAgeyBtb2RlOiAnY29ycyd9KVxuICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgIHJldHVybiByZXNwb25zZS5qc29uKClcbiAgfSlcbiAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgbGV0IHJlc3VsdCA9IHtcbiAgICAgIFwiY2l0eVwiOiByZXNwb25zZS5uYW1lLFxuICAgICAgXCJ0ZW1wZXJhdHVyZVwiIDogcmVzcG9uc2UubWFpbi50ZW1wIFxuICAgIH1cblxuICAgIGNpdHkudGV4dENvbnRlbnQgPSByZXNwb25zZS5uYW1lXG4gICAgd2VhdGhlci50ZXh0Q29udGVudCA9IHJlc3BvbnNlLm1haW4udGVtcCAtIDI3My4xNSArIFwiwrAgQ1wiXG4gICAgd2VhdGhlclR5cGVUZXh0LnRleHRDb250ZW50ID0gcmVzcG9uc2Uud2VhdGhlclswXS5tYWluXG4gICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2Uud2VhdGhlcik7XG4gICAgLy8gY2hhaW5BcHBlbmQoZGlzcGxheSwgY2l0eSlcbiAgICBjb25zb2xlLmxvZyhgQ2l0eTogJHtyZXN1bHQuY2l0eX0gXFxuIFRlbXBlcmF0ZTogJHtyZXN1bHQudGVtcGVyYXR1cmV9IGluIEthbHZpbmApXG4gICAgbGV0IGpzb25SZXN1bHQgPSAgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpXG4gICAgY29uc29sZS5sb2coanNvblJlc3VsdCk7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgcmV0dXJuIGpzb25SZXN1bHRcbiAgfSlcbiAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgY29uc29sZS5sb2coXCJDaXR5IG5vdCBmb3VuZFwiKVxuICB9KVxufVxuXG5zdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSk9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKVxuICBnZXRSZXN1bHQoKVxufSlcblxuLy8gY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKVxuLy8gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtYWluJylcbi8vICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWN0aW9uJylcbi8vICBjb250YWluZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsICdjb250YWluZXInKVxuLy8gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gXG4vLyBsZXQgbm9kZXMgPSBbYm9keSwgbWFpbiwgY29udGFpbmVyLCBkaXZdXG4vLyBmb3IgKGxldCBpID0gbm9kZXMubGVuZ3RoLTI7IGk+PTA7IGktLSkge1xuLy8gXHRub2Rlc1tpXS5hcHBlbmRDaGlsZChub2Rlc1tpKzFdKVxuLy8gfVxuXG5cblxuLy8gYGh0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT1UYXNoa2VudCZhcHBpZD0ke2FwaUtleX1gIl0sInNvdXJjZVJvb3QiOiIifQ==